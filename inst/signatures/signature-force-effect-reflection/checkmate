strict `%??%` <2>;
strict `allMissing` <1>;
strict `%and%` <1,2>;
strict `anyInfinite` <1>;
strict `anyMissing` <1>;
strict `anyNaN` <1>;
strict `asCount` <2,3,4,5>;
strict `asInt` <2,3,4,5,6>;
strict `asInteger` <2,3,4,5,6,7,8,9,10,11,12,13>;
strict `assert` <3>;
strict `assert_atomic` <2,3,4,5,6,7,8,9,10>;
strict `assertAtomic` <2,3,4,5,6,7,8,9,10>;
strict `assert_atomic_vector` <2,3,4,5,6,7,8,9,10>;
strict `assertAtomicVector` <2,3,4,5,6,7,8,9,10>;
strict `assert_character` <2,3,4,5,6,7,8,9,10,11,12,13,14,15,16>;
strict `assertCharacter` <2,3,4,5,6,7,8,9,10,11,12,13,14,15,16>;
strict `assert_choice` <2,3,4,5,6>;
strict `assertChoice` <2,3,4,5,6>;
strict `assert_class` <2,3,4,5,6>;
strict `assertClass` <2,3,4,5,6>;
strict `assert_count` <2,3,4,5,6,7,8>;
strict `assertCount` <2,3,4,5,6,7,8>;
strict `assertDataFrame` <2,3,4,5,6,7,8,9,10,11,12,13,14,15>;
strict `assert_data_table` <2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17>;
strict `assertDirectoryExists` <2,3,4>;
strict `assertEnvironment` <2,3,4,5>;
strict `assertFactor` <2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17>;
strict `assertFileExists` <2,3,4,5>;
strict `assert_flag` <2,3,4,5>;
strict `assertFlag` <2,3,4,5>;
strict `assert_formula` <2,3,4>;
strict `assertFunction` <2,3,4,5,6,7>;
strict `assert_int` <2,3,4,5,6,7,8,9>;
strict `assertInt` <2,3,4,5,6,7,8,9>;
strict `assert_integer` <2,3,4,5,6,7,8,9,10,11,12,13,14>;
strict `assertInteger` <2,3,4,5,6,7,8,9,10,11,12,13,14>;
strict `assertIntegerish` <2,3,4,5,6,7,8,9,10,11,12,13,14,15,16>;
strict `assert_list` <2,3,4,5,6,7,8,9,10,11,12>;
strict `assertList` <2,3,4,5,6,7,8,9,10,11,12>;
strict `assertLogical` <2,3,4,5,6,7,8,9,10,11>;
strict `assert_names` <2,3,4,5,6,7,8,9,10>;
strict `assertNames` <2,3,4,5,6,7,8,9,10>;
strict `assert_number` <2,3,4,5,6,7,8>;
strict `assertNumber` <2,3,4,5,6,7,8>;
strict `assertNumeric` <2,3,4,5,6,7,8,9,10,11,12,13,14,15>;
strict `assertPathForOutput` <2,3,4,5>;
strict `assert_r6` <2,3,4,5,6,7,8,9>;
strict `assertSetEqual` <2,3,4,5,6>;
strict `assert_string` <2,3,4,5,6,7,8,9>;
strict `assertString` <2,3,4,5,6,7,8,9>;
strict `assert_subset` <2,3,4,5,6>;
strict `assertSubset` <2,3,4,5,6>;
strict `assert_vector` <2,3,4,5,6,7,8,9,10,11,12>;
strict `assertVector` <2,3,4,5,6,7,8,9,10,11,12>;
strict `checkAccess` <1,2>;
strict `checkArray` <1,2,3,4,5,6,7>;
strict `check_character` <1,2,3,4,5,6,7,8,9,10,11,12,13,14>;
strict `checkCharacter` <1,2,3,4,5,6,7,8,9,10,11,12,13,14>;
strict `checkCharacterPattern` <1,2,3,4>;
strict `checkChoice` <1,2,3,4>;
strict `check_class` <1,2,3,4>;
strict `checkClass` <1,2,3,4>;
strict `checkCount` <1,2,3,4,5>;
strict `check_data_frame` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `checkDataFrame` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `checkDataTable` <1,2,3,4,5,6,7,8,9,10,11,12,13,14,15>;
strict `checkDataTableProps` <1,2,3>;
strict `checkDirectoryExists` <1,2>;
strict `checkDisjunct` <1,2,3>;
strict `checkEnvironment` <2,3>;
strict `checkFactor` <1,2,3,4,5,6,7,8,9,10,11,12,13,14,15>;
strict `checkFactorLevels` <1,2,3,4,5,6,7>;
strict `checkFALSE` <1,2>;
strict `checkFileExists` <1,2,3>;
strict `checkFileExtension` <1,2>;
strict `checkFlag` <1,2,3>;
strict `checkFormula` <1,2>;
strict `checkFunction` <1,2,3,4,5>;
strict `checkInteger` <1,2,3,4,5,6,7,8,9,10,11,12>;
strict `checkIntegerish` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `check_list` <1,2,3,4,5,6,7,8,9,10>;
strict `checkList` <1,2,3,4,5,6,7,8,9,10>;
strict `checkListTypes` <1,2>;
strict `checkLogical` <1,2,3,4,5,6,7,8,9>;
strict `check_matrix` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `checkMatrix` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `checkMultiClass` <1,2,3>;
strict `checkNames` <1,2,3,4,5,6,7,8>;
strict `checkNamesCmp` <1,2,3,4,5,6>;
strict `checkNull` <1>;
strict `checkNumeric` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `checkOS` <1>;
strict `checkPathForOutput` <1,2,3>;
strict `check_r6` <1,2,3,4,5,6,7>;
strict `checkR6` <1,2,3,4,5,6,7>;
strict `checkR6Props` <2,3,4>;
strict `checkScalarNA` <1,2>;
strict `checkSetEqual` <1,2,3,4>;
strict `checkString` <1,2,3,4,5,6,7>;
strict `checkSubset` <1,2,3,4>;
strict `checkTibble` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `checkTRUE` <1,2>;
strict `isSameType` <1,2>;
strict `makeAssertion` <1,2,3>;
strict `makeAssertionFunction` <2,3,4,5>;
strict `makeExpectationFunction` <2,3,4>;
strict `makeTestFunction` <2,3>;
strict `matchArg` <4,5>;
strict `%nin%` <1,2>;
strict `.onLoad` <1,2>;
strict `qassert` <1,2,3>;
strict `qtest` <1,2>;
strict `qtestr` <1,2,3>;
strict `set_collapse` <1>;
strict `testAccess` <1,2>;
strict `testAtomic` <1,2,3,4,5,6,7,8>;
strict `testAtomicVector` <1,2,3,4,5,6,7,8>;
strict `testCharacter` <1,2,3,4,5,6,7,8,9,10,11,12,13,14>;
strict `testChoice` <1,2,3,4>;
strict `test_class` <1,2,3,4>;
strict `testClass` <1,2,3,4>;
strict `testComplex` <1,2,3,4,5,6,7,8,9>;
strict `testCount` <1,2,3,4,5>;
strict `testDataFrame` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `testDataTable` <1,2,3,4,5,6,7,8,9,10,11,12,13,14,15>;
strict `testDirectory` <1,2>;
strict `testDisjunct` <1,2,3>;
strict `testDouble` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `testEnvironment` <1,2,3>;
strict `testFactor` <1,2,3,4,5,6,7,8,9,10,11,12,13,14,15>;
strict `testFALSE` <1,2>;
strict `testFileExists` <1,2,3>;
strict `testFlag` <1,2,3>;
strict `testFunction` <1,2,3,4,5>;
strict `testInt` <1,2,3,4,5,6>;
strict `testInteger` <1,2,3,4,5,6,7,8,9,10,11,12>;
strict `testIntegerish` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `testList` <1,2,3,4,5,6,7,8,9,10>;
strict `testLogical` <1,2,3,4,5,6,7,8,9>;
strict `testMatrix` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `testNamed` <1,2>;
strict `testNames` <1,2,3,4,5,6,7,8>;
strict `testNull` <1>;
strict `testNumber` <1,2,3,4,5,6>;
strict `testNumeric` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `test_os` <1>;
strict `testOS` <1>;
strict `testPathForOutput` <1,2,3>;
strict `testRaw` <1,2,3,4,5,6>;
strict `testScalar` <1,2,3>;
strict `testScalarNA` <1,2>;
strict `testSetEqual` <1,2,3,4>;
strict `testString` <1,2,3,4,5,6,7>;
strict `testSubset` <1,2,3,4>;
strict `testTibble` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `testTRUE` <1,2>;
strict `testVector` <1,2,3,4,5,6,7,8,9,10>;
strict `vname` <>;
strict `wf` <1,2>;
strict `wl` <1,2>;