strict `addFinalizerToLast` <>;
strict `addFinalizerToLast.default` <>;
strict `Arguments` <>;
strict `attachLocally.list` <0,1,2,3,4>;
strict `capitalize` <>;
strict `capitalize.default` <0>;
strict `captureOutput` <1,2,3,4>;
strict `cat` <>;
strict `cat.default` <>;
strict `cat.NullVerbose` <>;
strict `cmdArgs` <0,1,2,4>;
strict `commandArgs` <0,1,2,3,4,5,6,7,8,9>;
strict `commandArgs` `assertNamedList` <0,1>;
strict `commandArgs` `getReserved` <0,1>;
strict `commandArgs` `parseReservedArgs` <0,1>;
strict `egsub` <0,1,2,4,5,6>;
strict `evaluate` <>;
strict `evaluate.GString` <0,1>;
strict `fileAccess` <>;
strict `fileAccess.default` <0,1,2>;
strict `file.info2` <>;
strict `filePath` <>;
strict `filePath.default` <1,2,3,4,5,6>;
strict `filePath.default` `getWindowsDrivePattern` <0>;
strict `filePath.default` `removeEmptyDirs` <0>;
strict `filePath.default` `removeUpsFromPathname` <0,1>;
strict `getAbsolutePath` <>;
strict `getAbsolutePath.default` <0,1,2>;
strict `getAbsolutePath.default` `getName` <0,1>;
strict `getCharacter` <>;
strict `getCharacter.Arguments` <0,2>;
strict `getCharacters` <>;
strict `getCharacters.Arguments` <0,2,3,4,5,6,7>;
strict `getDouble` <>;
strict `getDouble.Arguments` <0,2>;
strict `getDoubles` <>;
strict `getDoubles.Arguments` <0,2>;
strict `getEnvironment.Arguments` <0,2>;
strict `getInstanceOf` <>;
strict `getInstanceOf.Arguments` <0,2,3,5>;
strict `getInteger` <>;
strict `getInteger.Arguments` <0,2>;
strict `getIntegers` <>;
strict `getIntegers.Arguments` <0,2>;
strict `getLogical` <>;
strict `getLogical.Arguments` <0,2>;
strict `getLogicals` <>;
strict `getLogicals.Arguments` <0,3,4,5>;
strict `getNumeric` <>;
strict `getNumeric.Arguments` <0,2>;
strict `getNumerics` <>;
strict `getNumerics.Arguments` <0,2,3,4,6>;
strict `getOption` <>;
strict `getOption.default` <>;
strict `getParent` <>;
strict `getParent.default` <0,1,2>;
strict `getParent.default` `getParentLocal` <0>;
strict `getParent.default` `getWindowsDrivePattern` <0>;
strict `.getPathIfEmpty` <0,1>;
strict `getRaw` <>;
strict `getRaw.GString` <0>;
strict `getReadablePathname` <>;
strict `getReadablePathname.Arguments` <0,1,3,4,5>;
strict `getRelativePath` <>;
strict `getRelativePath.default` <0,1,2>;
strict `getRelativePath.default` `getWindowsDrivePattern` <0>;
strict `getThreshold.Verbose` <0>;
strict `getVariableValue` <>;
strict `getVariableValue.GString` <0,1,2,3,4,5,6>;
strict `getVector` <>;
strict `getVector.Arguments` <0,2,3>;
strict `getVerbose` <>;
strict `getVerbose.Arguments` <0,2,3,5>;
strict `getWritablePath` <>;
strict `getWritablePath.Arguments` <0,1>;
strict `getWritablePathname` <>;
strict `getWritablePathname.Arguments` <0,2,3,4,5>;
strict `gstring` <>;
strict `GString` <1>;
strict `gstring.default` <1,2,3>;
strict `gstring.GString` <0,1>;
strict `hasUrlProtocol` <>;
strict `hasUrlProtocol.default` <0>;
strict `hpaste` <>;
strict `hpaste.default` <1,2,4,5,6>;
strict `inherits` <>;
strict `inherits.default` <>;
strict `isAbsolutePath` <>;
strict `isAbsolutePath.default` <0>;
strict `isDirectory` <>;
strict `isDirectory.default` <0>;
strict `isFile` <>;
strict `isFile.default` <0>;
strict `isOpen` <>;
strict `isOpen.default` <>;
strict `isPackageInstalled` <>;
strict `isPackageInstalled.default` <0>;
strict `isPackageLoaded` <>;
strict `isPackageLoaded.default` <0,1>;
strict `isUrl` <>;
strict `isUrl.default` <0>;
strict `less` <>;
strict `less.Verbose` <0,1>;
strict `mkdirs` <>;
strict `mkdirs.default` <0,1,2>;
strict `mkdirs.default` `isLink` <0>;
strict `mprintf` <1>;
strict `NullVerbose` <>;
strict `.onAttach` <0,1>;
strict `.onLoad` <0,1>;
strict `onSessionExit` <>;
strict `onSessionExit.default` <0,1>;
strict `parse` <>;
strict `parse.GString` <0>;
strict `.parseVersion` <0,1>;
strict `.parseVersion` `test` <0>;
strict `printf` <>;
strict `printf.NullVerbose` <>;
strict `setThreshold.Verbose` <0,1>;
strict `sourceTo` <>;
strict `sourceTo.default` <0,1,2,4,5,6>;
strict `.splitBy` <0,1,2>;
strict `.splitBy` `trim` <0>;
strict `.stop_if_not` <>;
strict `Sys.readlink2` <0,1>;
strict `use` <>;
strict `use.default` <0,1,2,3,4,5,6,8>;
strict `use.default` `captureAll` <1,2>;
strict `use.default` `captureAll` `closeAll` <0>;
strict `Verbose` <0,1,2,3,4,5,6>;
strict `withCapture` <1,2,3,5,6,7,8,9,10>;
strict `withoutGString` <1>;