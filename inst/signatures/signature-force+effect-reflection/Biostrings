strict `.aa2byte` <1>;
strict `AAMultipleAlignment` <2,3,4,5>;
strict `AAString` <1,2,3>;
strict `AAStringSet` <2,3,4,5>;
strict `AAStringSetList` <2>;
strict `.alphabetFrequencyToUniqueLetters` <1>;
strict `.bsMismatch` <1,2,3,4>;
strict `BString` <1,2,3>;
strict `BStringSet` <2,3,4,5>;
strict `.BStringSetToXStringQuality` <1,2>;
strict `.BStringToXStringQuality` <1,2>;
strict `buildLookupTable` <>;
strict `.characterToXStringQuality` <1,2>;
strict `.charToXString` <1,2,3,4,5>;
strict `.charToXStringSet` <1,2,3,4,5,6>;
strict `.check_fasta_index` <1>;
strict `.checkFormat` <1>;
strict `.checkUserArgsWhenTrustedBandIsFull` <1,2>;
strict `.close_filexp_list` <1>;
strict `.coerce_and_call_next_method` <1,2,3>;
strict `.coerce_to` <1,2>;
strict `comparable_seqtypes` <1,2>;
strict `compatible_seqtypes` <2>;
strict `.compute_sorted_fasta_blocks_from_ssorted_fasta_index` <1>;
strict `.computeTrimEnd` <1,2,3,4,5>;
strict `.computeTrimStart` <1,2,3,4,5>;
strict `dinucleotideFrequency` <1,2,3,4,5,6>;
strict `DNAcodes` <1>;
strict `DNAMultipleAlignment` <2,3,4,5>;
strict `.DNAorRNAcodes` <1,2>;
strict `DNAString` <2,3>;
strict `DNAStringSet` <2,3,4,5>;
strict `DNAStringSetList` <2>;
strict `errorSubstitutionMatrices` <1,2,3,4>;
strict `fasta.index` <1,2,3,4,5>;
strict `fasta.seqlengths` <1,2,3,4,5,6>;
strict `.find_palindromes` <1,2,3,4,5,6>;
strict `fromXStringViewsToStringSet` <1,2,3>;
strict `get_aligned_pattern` <3,4,5>;
strict `getdata` <1>;
strict `getGeneticCode` <1,2,3>;
strict `get_seqtype_conversion_lookup` <>;
strict `.get_xscat_ans_cardinality` <>;
strict `.get_xscat_ans_seqtype` <>;
strict `gregexpr2` <1,2>;
strict `g.test` <2,3,4,5,6>;
strict `hasLetterAt` <1,2,3,4>;
strict `IlluminaQuality` <1>;
strict `.inplaceReplaceLetterAt` <1,2,3>;
strict `.insertSpaces` <1>;
strict `.IntegerOrNumericListToXStringQuality` <1,2>;
strict `.integerToXStringQuality` <1,2>;
strict `isCharacterAlgo` <1>;
strict `.is_filexp_list` <1>;
strict `isMatchingAt` <1,2,3,4,5,6,7>;
strict `isNumericOrNAs` <1>;
strict `.IUPACcodes` <1>;
strict `.letterAsByteVal` <1>;
strict `.letterFrequency` <1,2,3,4,5>;
strict `longestConsecutive` <1,2>;
strict `.make_blank_BString` <1>;
strict `.make_fuzzy_genetic_code` <1,2>;
strict `.make_IRanges_from_at` <1>;
strict `.make_pipes` <1>;
strict `.makePostalignedSeqs` <1>;
strict `.make_sequence_fillers_from_widths` <1,2>;
strict `.makeSubstitutionLookupTable` <1>;
strict `.make_translation_lkup` <1,2>;
strict `mask` <1,2,3,4>;
strict `.MaskedXString.codons` <1>;
strict `.matchPatternAt` <1,2,3,4,5,6,7,8,9,10>;
strict `.matchPDict` <1,2,3,4,5,6,7,8,9>;
strict `.match.PDict3Parts.XString` <1,2,3,4,5,6,7,8,9>;
strict `matchprobes` <1,2,3>;
strict `.match.TB_PDict` <1,2,3,4,5,6,7,8,9>;
strict `.match.XStringSet` <1,2,3,4,5,6,7,8,9>;
strict `.match.XStringSet.XString` <1,2,3,4,5,6,7,8,9>;
strict `mergeIUPACLetters` <1>;
strict `.mismatch` <1,2,3>;
strict `.mkAllStrings` <1,2,3>;
strict `mkAllStrings` <1,2,3>;
strict `.mkAllStringsL` <1,2>;
strict `.mkAllStringsR` <1,2>;
strict `.mkOldToNewLkup` <1,2,3>;
strict `mpi.QualityScaledXStringSet.pairwiseAlignment` <1,2,3,4,5,6,7>;
strict `mpi.XStringSet.pairwiseAlignment` <1,2,3,4,5,6,7>;
strict `N50` <1>;
strict `neditAt` <1,2,3,4,5>;
strict `.new_MultipleAlignment` <1,3,4,5,6>;
strict `newPairwiseAlignments` <1,2,3,4,5,6,7,8>;
strict `.new_XStringSetList_from_list` <1,2>;
strict `.new_XStringSetList_from_List` <1,2>;
strict `normargAlgorithm` <1>;
strict `.normargAsArray` <1>;
strict `.normargCollapse` <1>;
strict `.normargFastMovingSide` <1,2>;
strict `normargFixed` <1,3>;
strict `.normargFuzzyMatrix` <1,2>;
strict `.normarg_genetic.code` <1>;
strict `.normarg_if.fuzzy.codon` <1>;
strict `.normargLetters` <1>;
strict `.normarg_maxLmismatch` <1,2,3>;
strict `normargMaxMismatch` <1,2>;
strict `normargMinMismatch` <1,2,3>;
strict `.normargMinScore` <1,2>;
strict `.normarg_nrec` <1>;
strict `.normargOR` <1>;
strict `.normarg_padding.letter` <1,2,3>;
strict `normargPattern` <3>;
strict `.normargPfm` <1>;
strict `.normargPriorParams` <1>;
strict `.normargPwm` <1,2>;
strict `.normarg_quality` <2>;
strict `.normargSimplifyAs` <1,2>;
strict `.normarg_skip` <1>;
strict `.normargStep` <1>;
strict `.normargSubject` <>;
strict `normargSubject` <1,2>;
strict `normargUseNames` <1>;
strict `.normargWidth` <1,2,3>;
strict `normargWithIndels` <1,2>;
strict `.normargWithLabels` <1>;
strict `nucleotideSubstitutionMatrix` <1,2,3,4>;
strict `.numericToXStringQuality` <1,2>;
strict `oligonucleotideTransitions` <1,2,3,4>;
strict `.oneSeqToXStringSet` <1,2,3,4,5,6>;
strict `.onLoad` <1,2>;
strict `padAndClip` <1,3,4,5>;
strict `.palindrome_arm_length` <1,2,3>;
strict `.PDict` <1,2,3,4,5,6,7>;
strict `.PDict3Parts` <1,2,3,4,5,6>;
strict `PhredQuality` <>;
strict `.postaligned_gap_ranges` <1>;
strict `.postaligned_match_ranges` <1>;
strict `.pre2postaligned` <1,2>;
strict `PWMscoreStartingAt` <1,3>;
strict `qualityConverter` <2,3>;
strict `QualityScaledDNAStringSet` <1,2>;
strict `QualityScaledXStringSet` <>;
strict `QualityScaledXStringSet.pairwiseAlignment` <1,2,3,4,5,6,7>;
strict `QualityScaledXStringSet.stringDist` <2,3,4,5,6,7,8>;
strict `qualitySubstitutionMatrices` <1,2,4>;
strict `readAAMultipleAlignment` <>;
strict `.read.ClustalAln` <>;
strict `readDNAMultipleAlignment` <>;
strict `readDNAStringSet` <1,2,3,4,5,6,7>;
strict `.read_fastq_files` <1,2,3,4,5,6,7,8>;
strict `.read.MultipleAlignment` <3>;
strict `.read.MultipleAlignment.splitRows` <1,2>;
strict `.read.MultipleMask` <>;
strict `.read.PhylipAln` <2>;
strict `readQualityScaledDNAStringSet` <1,2,3,4,5,6>;
strict `.read_XStringSet` <1,2,3,4,5,6,7,8>;
strict `.read_XStringSet_from_fasta_index` <1,2,3,4>;
strict `.read_XStringSet_from_ssorted_fasta_index` <1,2,3>;
strict `reduceProbePairMatches` <1,2>;
strict `replaceAmbiguities` <1,2>;
strict `RNAString` <1,2,3>;
strict `RNAStringSet` <2,3,4,5>;
strict `safeLettersToInt` <1,2>;
strict `selectAlgo` <1,2,3,4,5,6>;
strict `.setMask` <2,3,5>;
strict `SolexaQuality` <>;
strict `.solve_id_or_name2` <1,2>;
strict `stackStrings` <1,2,3,4,5,6,7>;
strict `.strChop` <1,3>;
strict `.TB_PDict` <1,2,3,4,5>;
strict `.to.ans.type` <1>;
strict `toSeqSnippet` <1,2>;
strict `toXStringViewsOrXString` <1>;
strict `trinucleotideFrequency` <1,2,3,4,5,6>;
strict `unitScale` <1>;
strict `unsafe.newXStringViews` <1,2,3>;
strict `.valid.algos` <1,2,3,4,5>;
strict `.valid.AlignedXStringSet` <1>;
strict `.valid.MaskedXString` <>;
strict `.valid.MaskedXString.masks` <1>;
strict `.valid.MaskedXString.unmasked` <>;
strict `.valid.MultipleAlignment.colmask` <1>;
strict `.valid.MultipleAlignment.rowmask` <1>;
strict `.valid.MultipleAlignment.unmasked` <>;
strict `.valid.PairwiseAlignments` <1>;
strict `.vmatchPDict` <1,2,3,4,5,6,7,8,9,10,11>;
strict `.vmatch.XStringSet` <1,2,3,4,5,6,7,8,9,10,11>;
strict `.vmatch.XStringSet.XStringSet` <1,2,3,4,5,6,7,8,9,10,11>;
strict `.V_recycle` <1,2,3,4>;
strict `which.isMatchingAt` <1,2,3,4,5,6,7,8,9>;
strict `.write.MultAlign` <1,2,3,4,5>;
strict `.writePairHeader` <1,3,4,5,6,7,8,9>;
strict `.writePairSequences` <3,4,5,6,7,8,9>;
strict `writePairwiseAlignments` <1,2,3,4>;
strict `write.phylip` <1,2>;
strict `writeQualityScaledXStringSet` <1,2,3,4,5>;
strict `writeXStringSet` <1,3,4,5,6>;
strict `.write_XStringSet_to_fasta` <1,2,3>;
strict `.write_XStringSet_to_fastq` <1,2>;
strict `xsbaseclass` <>;
strict `xscat` <>;
strict `xscodec` <>;
strict `xs_dec_lkup` <1>;
strict `.XStringCodec.DNAorRNA` <1>;
strict `.XString.equal` <1>;
strict `.XString.matchPattern` <2,3,4,5,6,7,8>;
strict `.XString.matchPWM` <1,2,3,4,5>;
strict `.XString.nucleotide_frequency` <1,2,3>;
strict `.XStringQualityToInteger` <1,2>;
strict `.XStringQualityToIntegerMatrix` <1>;
strict `.XStringQualityToNumeric` <1,2>;
strict `XString.readCodes` <1,2,3>;
strict `.XStringSet.amino_acid_frequency` <1,2,3>;
strict `.XStringSet.letter_frequency` <1,2,3>;
strict `XStringSetList` <1,3>;
strict `.XStringSet.nucleotide_frequency` <1,2,3,4>;
strict `XStringSet.pairwiseAlignment` <1,2,3,4,5,6,7>;
strict `XStringSet.stringDist` <2,3,4,5,6,7,8,9>;
strict `.XStringSet.trimLRPatterns` <1,2,3,4,5,6,7,8,9,10>;
strict `.XStringSet.vmatchPattern` <1,2,3,4,5,6,7,8>;
strict `.XString.two_way_code_frequency` <1,2,3,4>;
strict `XStringViews.equal` <1>;
strict `.XStringViews.matchPattern` <1,2,3,4,5,6,7,8>;
strict `XStringViews.view1_equal_view2` <1,2,3,4,5,6>;