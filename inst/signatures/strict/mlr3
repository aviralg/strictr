strict `.__BenchmarkResult__aggregate` <1,4,5,6,7,8>;
strict `.__BenchmarkResult__combine` <1,4>;
strict `.__BenchmarkResult__filter` <1,4,5,6,7,8,9>;
strict `.__BenchmarkResult__format` <1>;
strict `.__BenchmarkResult__initialize` <1,4>;
strict `.__BenchmarkResult__learners` <1>;
strict `.__BenchmarkResult__print` <1>;
strict `.__BenchmarkResult__task_type` <1>;
strict `.__BenchmarkResult__tasks` <1>;
strict `.__DataBackend__format` <1>;
strict `.__DataBackend__hash` <2>;
strict `.__DataBackend__initialize` <1,2,4,5,6>;
strict `.__DataBackend__print` <1>;
strict `.__DataBackendCbind__colnames` <2>;
strict `.__DataBackendCbind__data` <1,2,4,5,6>;
strict `.__DataBackendCbind__initialize` <3,4,5>;
strict `.__DataBackendCbind__rownames` <2>;
strict `.__DataBackendDataTable__colnames` <2>;
strict `.__DataBackendDataTable__data` <1,2,4,5,6>;
strict `.__DataBackendDataTable__distinct` <2,4,5>;
strict `.__DataBackendDataTable__head` <2,4>;
strict `.__DataBackendDataTable__initialize` <3,4,5>;
strict `.__DataBackendDataTable__missings` <1,4,5>;
strict `.__DataBackendDataTable__ncol` <2>;
strict `.__DataBackendDataTable__nrow` <2>;
strict `.__DataBackendDataTable__rownames` <1,2>;
strict `.__DataBackendMatrix__.translate_rows` <1,2,4>;
strict `.__DataBackendMatrix__colnames` <2>;
strict `.__DataBackendMatrix__data` <1,2,4,5,6>;
strict `.__DataBackendMatrix__head` <1,4>;
strict `.__DataBackendMatrix__initialize` <3,4,5,6>;
strict `.__DataBackendMatrix__rownames` <1,2>;
strict `.__Learner__deep_clone` <4,5>;
strict `.__Learner__encapsulate` <2>;
strict `.__Learner__errors` <1>;
strict `.__Learner__format` <1>;
strict `.__Learner__hash` <1,2>;
strict `.__Learner__initialize` <1,2,4,5,6,7,8,9,10,11,12>;
strict `.__Learner__log` <1>;
strict `.__Learner__model` <1>;
strict `.__Learner__param_set` <2>;
strict `.__Learner__phash` <1,2>;
strict `.__Learner__predict_newdata` <1,4,5>;
strict `.__Learner__predict_type` <2>;
strict `.__Learner__predict` <1,4>;
strict `.__Learner__print` <1>;
strict `.__Learner__reset` <1>;
strict `.__Learner__timings` <1>;
strict `.__Learner__train` <1,4>;
strict `.__Learner__warnings` <1>;
strict `.__LearnerClassif__initialize` <3,4,5,6,7,8,9,10,11>;
strict `.__LearnerClassifDebug__.predict` <1,4>;
strict `.__LearnerClassifDebug__.train` <1,4>;
strict `.__LearnerClassifDebug__initialize` <3>;
strict `.__LearnerClassifFeatureless__.predict` <1,4>;
strict `.__LearnerClassifFeatureless__.train` <4>;
strict `.__LearnerClassifFeatureless__initialize` <3>;
strict `.__LearnerClassifRpart__.predict` <1,4>;
strict `.__LearnerClassifRpart__.train` <1,4>;
strict `.__LearnerClassifRpart__initialize` <3>;
strict `.__LearnerRegr__initialize` <3,4,5,6,7,8,9,10,11>;
strict `.__LearnerRegrFeatureless__.predict` <1,4>;
strict `.__LearnerRegrFeatureless__.train` <1,4>;
strict `.__LearnerRegrFeatureless__initialize` <3>;
strict `.__LearnerRegrRpart__.predict` <1,4>;
strict `.__LearnerRegrRpart__.train` <1,4>;
strict `.__LearnerRegrRpart__initialize` <3>;
strict `.__Measure__aggregate` <1,4>;
strict `.__Measure__format` <1>;
strict `.__Measure__initialize` <1,4,5,6,7,8,9,10,11,12,13,14,15>;
strict `.__Measure__print` <1>;
strict `.__Measure__score` <1,4>;
strict `.__MeasureBinaryimple__initialize` <1,3,4>;
strict `.__MeasureClassif__initialize` <3,4,5,6,7,8,9,10,11,12,13,14>;
strict `.__MeasureClassifCosts__.score` <1,2,4,5>;
strict `.__MeasureClassifCosts__costs` <1,2,4>;
strict `.__MeasureClassifCosts__initialize` <3>;
strict `.__MeasureClassifSimple__.score` <1,4>;
strict `.__MeasureClassifSimple__initialize` <1,3,4>;
strict `.__MeasureDebug__.score` <1,4>;
strict `.__MeasureDebug__initialize` <3>;
strict `.__MeasureElapsedTime__initialize` <1,3,4,5>;
strict `.__MeasureOOBError__initialize` <3>;
strict `.__MeasureRegr__initialize` <3,4,5,6,7,8,9,10,11,12,13,14>;
strict `.__MeasureRegrSimple__.score` <1,4>;
strict `.__MeasureRegrSimple__initialize` <1,3,4>;
strict `.__MeasureSelectedFeatures__initialize` <1,3,4>;
strict `.__Prediction__row_ids` <1>;
strict `.__Prediction__score` <1,4,5,6>;
strict `.__Prediction__truth` <1>;
strict `.__PredictionClassif__confusion` <1>;
strict `.__PredictionClassif__initialize` <1,5,6,7,8,9>;
strict `.__PredictionClassif__prob` <1>;
strict `.__PredictionClassif__response` <1>;
strict `.__PredictionClassif__set_threshold` <1,4,5>;
strict `.__PredictionRegr__initialize` <1,5,6,7,8,9,10>;
strict `.__PredictionRegr__response` <1>;
strict `.__ResampleResult__aggregate` <4>;
strict `.__ResampleResult__errors` <1>;
strict `.__ResampleResult__format` <1>;
strict `.__ResampleResult__initialize` <1,4,5>;
strict `.__ResampleResult__learner` <1>;
strict `.__ResampleResult__prediction` <1,4>;
strict `.__ResampleResult__predictions` <1,4>;
strict `.__ResampleResult__print` <1>;
strict `.__ResampleResult__resampling` <1>;
strict `.__ResampleResult__score` <1,4,5,6,7>;
strict `.__ResampleResult__task` <1>;
strict `.__ResampleResult__warnings` <1>;
strict `.__Resampling__.get_set` <1,2,4,5>;
strict `.__Resampling__hash` <1>;
strict `.__Resampling__initialize` <1,4,5,6,7>;
strict `.__Resampling__instantiate` <1,2,4>;
strict `.__Resampling__is_instantiated` <1>;
strict `.__Resampling__test_set` <2,4>;
strict `.__Resampling__train_set` <2,4>;
strict `.__ResamplingBootstrap__.get_test` <1,4>;
strict `.__ResamplingBootstrap__.get_train` <1,4>;
strict `.__ResamplingBootstrap__.sample` <1,4>;
strict `.__ResamplingBootstrap__initialize` <3>;
strict `.__ResamplingBootstrap__iters` <1>;
strict `.__ResamplingCustom__.get_test` <1,4>;
strict `.__ResamplingCustom__.get_train` <1,4>;
strict `.__ResamplingCustom__initialize` <3>;
strict `.__ResamplingCustom__instantiate` <1,4,5,6>;
strict `.__ResamplingCustom__iters` <1>;
strict `.__ResamplingCV__.get_test` <1,4>;
strict `.__ResamplingCV__.get_train` <1,4>;
strict `.__ResamplingCV__.sample` <1,4>;
strict `.__ResamplingCV__deep_clone` <4,5>;
strict `.__ResamplingCV__initialize` <3>;
strict `.__ResamplingCV__iters` <1>;
strict `.__ResamplingHoldout__.get_test` <1>;
strict `.__ResamplingHoldout__.get_train` <1>;
strict `.__ResamplingHoldout__.sample` <1,4>;
strict `.__ResamplingHoldout__initialize` <3>;
strict `.__ResamplingInsample__.get_test` <1>;
strict `.__ResamplingInsample__.get_train` <1>;
strict `.__ResamplingInsample__.sample` <4>;
strict `.__ResamplingInsample__initialize` <3>;
strict `.__ResamplingLOO__.get_test` <1,4>;
strict `.__ResamplingLOO__.get_train` <1,4>;
strict `.__ResamplingLOO__.sample` <4>;
strict `.__ResamplingLOO__initialize` <3>;
strict `.__ResamplingLOO__iters` <1>;
strict `.__ResamplingRepeatedCV__.get_test` <1,4>;
strict `.__ResamplingRepeatedCV__.get_train` <1,4>;
strict `.__ResamplingRepeatedCV__.sample` <1,4>;
strict `.__ResamplingRepeatedCV__folds` <1,4>;
strict `.__ResamplingRepeatedCV__initialize` <3>;
strict `.__ResamplingRepeatedCV__iters` <1>;
strict `.__ResamplingRepeatedCV__repeats` <1,4>;
strict `.__ResamplingSubsampling__.combine` <4>;
strict `.__ResamplingSubsampling__.get_test` <1,4>;
strict `.__ResamplingSubsampling__.get_train` <1,4>;
strict `.__ResamplingSubsampling__.sample` <1,4>;
strict `.__ResamplingSubsampling__initialize` <3>;
strict `.__ResamplingSubsampling__iters` <1>;
strict `.__ResultData__as_data_table` <1,2,4,5,6>;
strict `.__ResultData__combine` <1,4>;
strict `.__ResultData__deep_clone` <4>;
strict `.__ResultData__get_view_index` <4>;
strict `.__ResultData__initialize` <1,4,5>;
strict `.__ResultData__iterations` <4>;
strict `.__ResultData__learners` <1,2,4,5,6>;
strict `.__ResultData__logs` <1,2,4,5>;
strict `.__ResultData__prediction` <1,4,5>;
strict `.__ResultData__predictions` <1,2,4,5>;
strict `.__ResultData__resamplings` <1,2,4>;
strict `.__ResultData__sweep` <1>;
strict `.__ResultData__task_type` <1>;
strict `.__ResultData__tasks` <1,2,4>;
strict `.__Task__cbind` <1,4>;
strict `.__Task__col_roles` <2>;
strict `.__Task__data_formats` <1>;
strict `.__Task__data` <1,4,5,6,7>;
strict `.__Task__deep_clone` <4,5>;
strict `.__Task__feature_names` <2>;
strict `.__Task__feature_types` <1,2>;
strict `.__Task__filter` <1,2,4>;
strict `.__Task__formula` <1,4>;
strict `.__Task__groups` <1,2>;
strict `.__Task__hash` <1,2>;
strict `.__Task__head` <1,2,4>;
strict `.__Task__initialize` <1,2,4,5,7>;
strict `.__Task__ncol` <2>;
strict `.__Task__nrow` <2>;
strict `.__Task__order` <1,2>;
strict `.__Task__properties` <2>;
strict `.__Task__row_ids` <2>;
strict `.__Task__row_names` <1>;
strict `.__Task__row_roles` <2>;
strict `.__Task__select` <1,2,4>;
strict `.__Task__strata` <1,2>;
strict `.__Task__target_names` <2>;
strict `.__Task__uris` <1,2>;
strict `.__Task__weights` <1,2>;
strict `.__TaskClassif__.update_class_property` <1,2>;
strict `.__TaskClassif__class_names` <1>;
strict `.__TaskClassif__data` <1,3,4,5,6,7>;
strict `.__TaskClassif__initialize` <2,3,4,6,7,8>;
strict `.__TaskClassif__negative` <1>;
strict `.__TaskClassif__positive` <1>;
strict `.__TaskClassif__truth` <1,3,4>;
strict `.__TaskGenerator__generate` <1,2,4>;
strict `.__TaskGenerator__initialize` <1,4,5,6,7,8>;
strict `.__TaskGenerator2DNormals__.generate_obj` <1,4>;
strict `.__TaskGenerator2DNormals__.generate` <1,2,4>;
strict `.__TaskGenerator2DNormals__initialize` <3>;
strict `.__TaskGenerator2DNormals__plot` <2,4,5>;
strict `.__TaskGeneratorCassini__.generate_obj` <1,4>;
strict `.__TaskGeneratorCassini__.generate` <1,2,4>;
strict `.__TaskGeneratorCassini__initialize` <3>;
strict `.__TaskGeneratorCassini__plot` <2,4,5>;
strict `.__TaskGeneratorCircle__.generate_obj` <1,4>;
strict `.__TaskGeneratorCircle__.generate` <1,2,4>;
strict `.__TaskGeneratorCircle__initialize` <3>;
strict `.__TaskGeneratorCircle__plot` <2,4,5>;
strict `.__TaskGeneratorFriedman1__.generate` <1,4>;
strict `.__TaskGeneratorFriedman1__initialize` <3>;
strict `.__TaskGeneratorMoons__.generate_obj` <1,4>;
strict `.__TaskGeneratorMoons__.generate` <1,2,4>;
strict `.__TaskGeneratorMoons__initialize` <3>;
strict `.__TaskGeneratorMoons__plot` <2,4,5>;
strict `.__TaskGeneratorSimplex__.generate_obj` <1,4>;
strict `.__TaskGeneratorSimplex__.generate` <1,2,4>;
strict `.__TaskGeneratorSimplex__initialize` <3>;
strict `.__TaskGeneratorSimplex__plot` <2,4,5>;
strict `.__TaskGeneratorSmiley__.generate_obj` <1,4>;
strict `.__TaskGeneratorSmiley__.generate` <1,2,4>;
strict `.__TaskGeneratorSmiley__initialize` <3>;
strict `.__TaskGeneratorSmiley__plot` <2,4,5>;
strict `.__TaskGeneratorSpirals__.generate_obj` <1,4>;
strict `.__TaskGeneratorSpirals__.generate` <1,2,4>;
strict `.__TaskGeneratorSpirals__initialize` <3>;
strict `.__TaskGeneratorSpirals__plot` <2,4,5>;
strict `.__TaskGeneratorXor__.generate_obj` <1,4>;
strict `.__TaskGeneratorXor__.generate` <1,2,4>;
strict `.__TaskGeneratorXor__initialize` <3>;
strict `.__TaskGeneratorXor__plot` <2,4,5>;
strict `.__TaskRegr__initialize` <1,3,4,6,7>;
strict `.__TaskRegr__truth` <3,4>;
strict `.__TaskSupervised__initialize` <1,3,4,5,7,8>;
strict `.__TaskSupervised__truth` <1,4>;
strict `.onLoad` <2>;
strict `append_log` <1,4>;
strict `as_benchmark_result.ResampleResult` <1>;
strict `as_benchmark_result` <1>;
strict `as_data_backend.data.frame` <1,2,3>;
strict `as_data_backend.Matrix` <1,2,3>;
strict `as_data_backend` <>;
strict `as_learner.Learner` <1,2>;
strict `as_learner` <1>;
strict `as_learners.list` <1,2>;
strict `as_learners` <1>;
strict `as_measure.Measure` <1,2>;
strict `as_measure` <1>;
strict `as_measures.list` <1>;
strict `as_measures.Measure` <1,2>;
strict `as_measures.NULL` <1,2>;
strict `as_measures` <1>;
strict `as_prediction_classif.data.frame` <1>;
strict `as_prediction_classif` <1>;
strict `as_prediction_data.list` <1,2,3,4>;
strict `as_prediction_data.Prediction` <1>;
strict `as_prediction_data` <1,2>;
strict `as_prediction_regr.data.frame` <1>;
strict `as_prediction_regr` <1>;
strict `as_prediction.Prediction` <1>;
strict `as_prediction.PredictionDataClassif` <1,2>;
strict `as_prediction.PredictionDataRegr` <1,2>;
strict `as_prediction` <1>;
strict `as_predictions.list` <1,2>;
strict `as_predictions` <1,2>;
strict `as_resampling.Resampling` <1,2>;
strict `as_resampling` <1>;
strict `as_resamplings.list` <1,2>;
strict `as_resamplings.Resampling` <1,2>;
strict `as_resamplings` <1>;
strict `as_result_data` <1,2,3,4,5,6,7>;
strict `as_task_classif.data.frame` <1,2,3,4>;
strict `as_task_classif` <>;
strict `as_task_regr.data.frame` <1,2,3>;
strict `as_task_regr` <1>;
strict `as_task.Task` <1,2>;
strict `as_task` <1>;
strict `as_tasks.list` <1,2>;
strict `as_tasks` <1>;
strict `as.data.table.BenchmarkResult` <1,4>;
strict `as.data.table.DictionaryLearner` <1>;
strict `as.data.table.DictionaryMeasure` <1>;
strict `as.data.table.DictionaryResampling` <1>;
strict `as.data.table.DictionaryTask` <1>;
strict `as.data.table.PredictionClassif` <1>;
strict `as.data.table.PredictionRegr` <1>;
strict `assert_backend` <1>;
strict `assert_benchmark_result` <1>;
strict `assert_cost_matrix` <1,2>;
strict `assert_has_backend` <1>;
strict `assert_learnable` <1,2>;
strict `assert_learner` <1,2,3>;
strict `assert_learners` <1,2,3>;
strict `assert_measure` <1,2>;
strict `assert_measures` <1>;
strict `assert_prediction` <1>;
strict `assert_range` <1>;
strict `assert_resampling` <1,2>;
strict `assert_resamplings` <1,2>;
strict `assert_ro_binding` <>;
strict `assert_row_ids` <1,2>;
strict `assert_set` <1,2>;
strict `assert_task` <1,2,3,4>;
strict `assert_tasks` <1,2,3,4>;
strict `benchmark_grid` <1,2,3>;
strict `benchmark` <1,2,3>;
strict `c.Prediction` <2>;
strict `c.PredictionDataClassif` <2>;
strict `check_prediction_data.PredictionDataClassif` <1>;
strict `check_prediction_data.PredictionDataRegr` <1>;
strict `check_prediction_data` <1>;
strict `col_info.DataBackend` <1>;
strict `col_info` <1>;
strict `convert_mlbench` <1>;
strict `default_measures` <1>;
strict `fget` <1,2,3,4>;
strict `fix_factor_levels.data.table` <1,2>;
strict `fix_factor_levels` <1,2>;
strict `get_log_condition` <1>;
strict `get_private` <1>;
strict `get_progressor` <>;
strict `hash` <>;
strict `hashes` <1>;
strict `learner_predict` <1,2,3>;
strict `learner_train` <1,2,3>;
strict `lrn` <1>;
strict `lrns` <1>;
strict `msr` <1>;
strict `new_prediction_data` <1,2>;
strict `phashes` <1>;
strict `predict.Learner` <1,2,3>;
strict `reassemble_learners` <1,2,3>;
strict `replace_with` <1,2,3>;
strict `resample` <1,2,3,4,5>;
strict `rsmp` <1>;
strict `score_measures` <1,2,3,4>;
strict `score_single_measure` <1,5>;
strict `task_check_col_roles` <1,2>;
strict `task_rm_backend` <1>;
strict `tgen` <1>;
strict `translate_types` <1>;
strict `tsk` <1>;
strict `ujoin` <1,2,3>;
strict `workhorse` <1,2,3,4,5,6,7>;