strict `as.edgelist.pending_update_network` <1>;
strict `as.ergm_model` <1>;
strict `as.ergm_model.formula` <1>;
strict `as.network.numeric` <1,6>;
strict `as.network.pending_update_network` <1,3>;
strict `as.rlebdm` <1>;
strict `as.rlebdm.edgelist` <1>;
strict `as.rlebdm.ergm` <1>;
strict `as.rlebdm.ergm_conlist` <1,3>;
strict `as.rlebdm.NULL` <1>;
strict `binary_dind_wrap` <1,2,3>;
strict `binary_wrap` <2,3,4,5,6,7>;
strict `.catchToList` <1>;
strict `c.ergm_model` <>;
strict `.check_acceptable` <2>;
strict `check.ErgmTerm` <1,2,3,4,5,6,7,8,9>;
strict `check_nonidentifiability` <1,2,3,4,5,6>;
strict `coef.ergm` <1>;
strict `COLLAPSE_SMALLEST` <1,2,3>;
strict `compress.rlebdm` <1>;
strict `control.ergm` <1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,47,48,49,50,51,52,53,54,55,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,112,113,114,115,116>;
strict `control.ergm.godfather` <1,2>;
strict `control.gof.ergm` <1,2,3,4,5,6,7,8,9,10,11,12,13>;
strict `control.logLik.ergm` <1,2,3,4,8,9,10,11,12,13,14,15,16,17>;
strict `control.san` <1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18>;
strict `control.simulate` <1,2,3,4,5,6,7,8,9,10,11,12>;
strict `control.simulate.ergm` <1,2,3,4,5,6,7,8,9,10,11,12>;
strict `control.simulate.formula` <1,2,3,4,5,6,7,8,9,10,11,12>;
strict `control.toplevel` <2>;
strict `degreedist` <1>;
strict `degreedist.network` <1,2>;
strict `ensure_network` <1>;
strict `ergm` <1,8,10>;
strict `ergm.allstats` <1,2,4>;
strict `ergm_attr_levels` <>;
strict `ergm_attr_levels.AsIs` <1>;
strict `ergm_attr_levels.formula` <1,2,3,4>;
strict `ergm_attr_levels.function` <1,4>;
strict `ergm_attr_levels.logical` <4>;
strict `ergm_attr_levels.NULL` <1>;
strict `ergm_attr_levels.numeric` <>;
strict `ergm.bounddeg` <1,2>;
strict `ergm.bridge.dindstart.llk` <1,2,3,4,5,6,7,9,10>;
strict `ergm.bridge.llr` <1,2,3,4,5,6,7,9,10>;
strict `ergm.bridge.preproc` <1,2,3>;
strict `ergm.checkconstraints.model` <1,2,3>;
strict `ergm.checkextreme.model` <1,3,5,6,7>;
strict `ergm_Clist` <1>;
strict `ergm_Clist.ergm_model` <1>;
strict `ergm_Clist.network` <1,2>;
strict `ergm_Clist.pending_update_network` <1,2>;
strict `ergm_conlist` <1>;
strict `ergm.Cprepare` <1,2,3>;
strict `ergm.curved.statsmatrix` <1,2,3>;
strict `ergm.estfun` <1,2,3>;
strict `ergm.estfun.matrix` <1,2,3>;
strict `ergm.estimate` <1,2,3,4,8,10,11,13,19,20>;
strict `ergm.eta` <1,2>;
strict `ergm.etagradmult` <1,2,3>;
strict `ergm.etamap` <1>;
strict `ergm.exact` <1,3,4>;
strict `ergm.geodistdist` <1>;
strict `ergm.geodistn` <2>;
strict `ergm.getCluster` <1>;
strict `ergm.getnetwork` <1>;
strict `ergm_get_vattr` <1,2,4>;
strict `ergm_get_vattr.AsIs` <1,2,3,4>;
strict `ergm_get_vattr.character` <1,2,3,4>;
strict `ergm_get_vattr.formula` <1,2,3,4>;
strict `ergm_get_vattr.function` <1,2,3,4>;
strict `ergm.godfather` <1,2,3,4,5,6,7>;
strict `ergm_Init_abort` <>;
strict `ergm.initialfit` <1,2,5>;
strict `-.ergm_levels_spec_function` <1>;
strict `ergm_MCMC_sample` <1,2,3,4,5,6,8>;
strict `ergm.MCMCse` <1,2,3,4,5>;
strict `ergm.MCMCse.lognormal` <1,2,3,4,5,7>;
strict `ergm_MCMC_slave` <1,2,4,5,7,8,9,10,11>;
strict `ergm.MCMLE` <1,2,3,5,6,7,8,11>;
strict `ergm_model` <1>;
strict `ergm.mple` <1,2,3,4,5,6,7,8,9,11>;
strict `ergmMPLE` <1,2,4,7>;
strict `ergm.pl` <1,2,3,5,6>;
strict `ergm_proposal` <>;
strict `ergm_proposal.character` <1,2,3,6>;
strict `ergm_proposal.formula` <1,2,3,4,5>;
strict `ergm.reviseinit` <1,2>;
strict `ergm.sample.tomcmc` <1,2>;
strict `ergm_SAN_slave` <1,2,4,5,6,8,9,10,11,12,13,14>;
strict `.extractCats` <1>;
strict `.extractTags` <1,2>;
strict `.extractTerms` <1>;
strict `.extract_z_edgelist` <1,2>;
strict `format.traceback` <1>;
strict `get.node.attr` <1,2,4>;
strict `gof` <1>;
strict `gof.ergm` <1,3,4,5,6,7>;
strict `gof.formula` <1,4,5,7,8>;
strict `.handle_multiple` <1>;
strict `.Hummel.steplength` <1,2,3,4,5,7,8,10>;
strict `InitErgmConstraint..attributes` <1>;
strict `InitErgmProposal.TNT` <>;
strict `InitErgmReference.Bernoulli` <>;
strict `InitErgmReference.DiscUnif` <2,3>;
strict `InitErgmReference.Unif` <2,3>;
strict `InitErgmTerm.absdiff` <1,2,4>;
strict `InitErgmTerm.b1degrange` <1,2,4>;
strict `InitErgmTerm.b1factor` <1,2,4>;
strict `InitErgmTerm.b1nodematch` <1,2,4>;
strict `InitErgmTerm.b2degrange` <1,2,4>;
strict `InitErgmTerm.b2factor` <1,2,4>;
strict `InitErgmTerm.b2nodematch` <1,2,4>;
strict `InitErgmTerm.concurrent` <1,2,4>;
strict `InitErgmTerm.degree` <1,2,4>;
strict `InitErgmTerm.density` <1,2>;
strict `InitErgmTerm.edgecov` <1,2>;
strict `InitErgmTerm.edges` <1,2>;
strict `InitErgmTerm.gwb1degree` <1,2,3,4,6>;
strict `InitErgmTerm.gwb2degree` <1,2,3,4,6>;
strict `InitErgmTerm.gwesp` <1,2,3,4>;
strict `InitErgmTerm.gwnsp` <1,2,3,4>;
strict `InitErgmTerm.indices` <1,2>;
strict `InitErgmTerm.kstar` <1,2,4>;
strict `InitErgmTerm.mm` <1,2>;
strict `InitErgmTerm.mutual` <1,2,4>;
strict `InitErgmTerm.nodecov` <1,2,4>;
strict `InitErgmTerm.nodefactor` <1,2,4>;
strict `InitErgmTerm.nodeicov` <1,2,4>;
strict `InitErgmTerm.nodematch` <1,2,4>;
strict `InitErgmTerm.nodeocov` <1,2,4>;
strict `InitErgmTerm.odegree` <1,2,4>;
strict `InitErgmTerm.triangle` <1,2,4>;
strict `InitErgmTerm.triangles` <1,2,4>;
strict `InitWtErgmProposal.DiscUnif` <1>;
strict `InitWtErgmProposal.DistRLE` <1>;
strict `InitWtErgmTerm.cyclicalweights` <1,2,3>;
strict `InitWtErgmTerm.nodematch` <1,2,4>;
strict `InitWtErgmTerm.nonzero` <1,2>;
strict `InitWtErgmTerm.sum` <1,2>;
strict `InitWtErgmTerm.transitiveweights` <1,2,3>;
strict `is.curved` <1>;
strict `is.curved.ergm_model` <1>;
strict `is.curved.formula` <1,2,3>;
strict `is.dyad.independent` <1>;
strict `is.dyad.independent.ergm` <1>;
strict `is.dyad.independent.ergm_conlist` <1,2>;
strict `is.dyad.independent.ergm_model` <1>;
strict `is.dyad.independent.formula` <1,2,3>;
strict `is.ergm` <1>;
strict `is.inCH` <1,2,3>;
strict `is.pending_update_network` <1>;
strict `LARGEST` <1>;
strict `llik.fun` <1,2,3,4,7,8,12,13>;
strict `llik.grad` <1,2,3,4,12,13>;
strict `llik.hessian` <1,2,3,4,12,13>;
strict `locate.InitFunction` <1,4>;
strict `logLik.ergm` <1,3>;
strict `logLikNull` <1>;
strict `logLikNull.ergm` <1>;
strict `network.edgecount.pending_update_network` <1,2>;
strict `nobs.ergm` <1>;
strict `nparam` <1>;
strict `nparam.default` <1>;
strict `nparam.ergm` <1,2>;
strict `nparam.ergm_model` <1,2,3,4>;
strict `nthreads` <1>;
strict `nthreads.control.list` <1>;
strict `offset.info.formula` <1,2>;
strict `.onAttach` <>;
strict `.onLoad` <>;
strict `Ops.rlebdm` <1>;
strict `param_names` <1>;
strict `param_names.default` <1>;
strict `param_names.ergm_model` <1,2>;
strict `pending_update_network` <1,2,3>;
strict `plot.gof` <1,3,4,5>;
strict `predict.ergm` <1>;
strict `predict_ergm_unconditional` <1,3,4>;
strict `predict.formula` <1,2,3,4,6>;
strict `print.network.list` <1,2>;
strict `prune.ergm_conlist` <1>;
strict `regexpr_list` <1,2>;
strict `.rightsize_vattr` <1,2,3,4>;
strict `rlebdm` <1,2>;
strict `san` <1>;
strict `san.ergm` <1,4,6,7,11>;
strict `san.ergm_model` <1,2,4,5,6,7,8,9,10,11,12>;
strict `san.formula` <2,3,5,7,8,12>;
strict `search.ergmTerms` <>;
strict `simulate.ergm` <1,2,3,8,11,12,13,14,16>;
strict `simulate.ergm_model` <1,2,3,5,7,8,9,10,11,12,13,14,15>;
strict `simulate.formula` <1>;
strict `simulate_formula` <1>;
strict `simulate.formula_lhs_network` <1,2,3>;
strict `.simulate_formula.network` <1,2,3,8,10,11,12,13,15,18>;
strict `single.impute.dyads` <1,3,4,7>;
strict `spectrum0.mvar` <1,2,4>;
strict `summary.ergm` <3,4,5>;
strict `summary.ergm_model` <1,2,3>;
strict `summary.formula` <1>;
strict `summary_formula` <1>;
strict `summary_formula.matrix` <1,2,4>;
strict `summary_formula.network` <1,2,4>;
strict `summary_formula.pending_update_network` <1,2,4>;
strict `summary.network.list` <1,2,3,4>;
strict `.termMatrix` <1,2,3>;
strict `.termTable` <1,2>;
strict `.termToc` <1>;
strict `to_ergm_Cdouble` <1>;
strict `to_ergm_Cdouble.rlebdm` <1>;
strict `traceback.search` <1>;
strict `updatemodel.ErgmTerm` <1,2>;
strict `update.network` <1,2,3>;
strict `vcov.ergm` <1,2>;